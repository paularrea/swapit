{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/web-dev/Projects/Swapit/Client/src/lib/AuthProvider.js\";\nimport React from \"react\";\nimport auth from \"./auth-service\"; // Importamos funciones para llamadas axios a la API\n\nconst {\n  Consumer,\n  Provider\n} = React.createContext(); // HOC para crear Consumer\n\nconst withAuth = WrappedComponent => {\n  return class extends React.Component {\n    render() {\n      return /*#__PURE__*/React.createElement(Consumer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }\n      }, ({\n        login,\n        signup,\n        user,\n        logout,\n        isLoggedin\n      }) => {\n        return /*#__PURE__*/React.createElement(WrappedComponent, Object.assign({\n          login: login,\n          signup: signup,\n          user: user,\n          logout: logout,\n          isLoggedin: isLoggedin\n        }, this.props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 15\n          }\n        }));\n      });\n    }\n\n  };\n}; // Provider\n\n\nclass AuthProvider extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoggedin: false,\n      user: null,\n      isLoading: true\n    };\n\n    this.signup = user => {\n      const {\n        username,\n        password,\n        name,\n        lastName\n      } = user;\n      auth.signup({\n        username,\n        password,\n        name,\n        lastName\n      }).then(user => this.setState({\n        isLoggedin: true,\n        user\n      })).catch(({\n        response\n      }) => this.setState({\n        message: response.data.statusMessage\n      }));\n    };\n\n    this.login = user => {\n      const {\n        username,\n        password\n      } = user;\n      auth.login({\n        username,\n        password\n      }).then(user => this.setState({\n        isLoggedin: true,\n        user\n      })).catch(err => console.log(err));\n    };\n\n    this.logout = () => {\n      auth.logout().then(() => this.setState({\n        isLoggedin: false,\n        user: null\n      })).catch(err => console.log(err));\n    };\n  }\n\n  componentDidMount() {\n    auth.me().then(user => this.setState({\n      isLoggedin: true,\n      user: user,\n      isLoading: false\n    })).catch(err => this.setState({\n      isLoggedin: false,\n      user: null,\n      isLoading: false\n    }));\n  }\n\n  render() {\n    const {\n      isLoading,\n      isLoggedin,\n      user\n    } = this.state;\n    const {\n      login,\n      logout,\n      signup,\n      getProfile\n    } = this;\n    return isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, \"Loading\") : /*#__PURE__*/React.createElement(Provider, {\n      value: {\n        isLoggedin,\n        user,\n        login,\n        logout,\n        signup,\n        getProfile\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 8\n      }\n    }, this.props.children);\n    /*<Provider> \"value={}\" datos que estarán disponibles para todos los componentes <Consumer> */\n  }\n\n}\n\nexport { Consumer, withAuth }; //  <--\tRECUERDA EXPORTAR  ! ! !\n\nexport default AuthProvider;","map":{"version":3,"sources":["/Users/mac/Desktop/web-dev/Projects/Swapit/Client/src/lib/AuthProvider.js"],"names":["React","auth","Consumer","Provider","createContext","withAuth","WrappedComponent","Component","render","login","signup","user","logout","isLoggedin","props","AuthProvider","state","isLoading","username","password","name","lastName","then","setState","catch","response","message","data","statusMessage","err","console","log","componentDidMount","me","getProfile","children"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport auth from \"./auth-service\";\t// Importamos funciones para llamadas axios a la API\nconst { Consumer, Provider } = React.createContext();\n\n// HOC para crear Consumer\nconst withAuth = (WrappedComponent) => {\n\n    return class extends React.Component {\n      render() {\n        \n        return (\n          <Consumer> \n          { \n            ({login, signup, user, logout, isLoggedin}) => {\n            return (\n              <WrappedComponent \n                login={login} \n                signup={signup} \n                user={user}\n                logout={logout}\n                isLoggedin={isLoggedin}\n                {...this.props} />\n            );\n          }}\n          </Consumer>\n        );\n      }\n    };\n  };\n\n// Provider\nclass AuthProvider extends React.Component {\n  state = { isLoggedin: false, user: null, isLoading: true };\n\n\tcomponentDidMount() {\n    auth.me()\n    .then((user) => this.setState({ isLoggedin: true, user: user, isLoading: false }))\n    .catch((err) => this.setState({ isLoggedin: false, user: null, isLoading: false }));\n  }\n\n  signup = (user) => {\n    const { username, password, name, lastName } = user;\n    \n    auth.signup({ username, password, name, lastName })\n      .then((user) => this.setState({ isLoggedin: true, user}) )\n      .catch(({response}) => this.setState({ message: response.data.statusMessage}));\n  };\n\n\n  login = (user) => {\n    const { username, password } = user;\n\n    auth.login({ username, password })\n      .then((user) => this.setState({ isLoggedin: true, user }))\n      .catch((err) => console.log(err));\n  };\n\n\n  logout = () => {\n    auth.logout()\n      .then(() => this.setState({ isLoggedin: false, user: null }))\n      .catch((err) => console.log(err));\n  };\n\n\t\n  render() {\n    const { isLoading, isLoggedin, user } = this.state;\n    const { login, logout, signup , getProfile} = this;\n    \n    return (\n      isLoading ? \n      <div>Loading</div> \n      :\n      (<Provider value={{ isLoggedin, user, login, logout, signup, getProfile}} >\n         {this.props.children}\n      </Provider>)\n    )\t/*<Provider> \"value={}\" datos que estarán disponibles para todos los componentes <Consumer> */\n  }\n}\n\nexport { Consumer, withAuth };\t\t//  <--\tRECUERDA EXPORTAR  ! ! !\n\nexport default AuthProvider;"]},"metadata":{},"sourceType":"module"}