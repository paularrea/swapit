{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/web-dev/Projects/Swapit/Client/src/components/PrivateRoute.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { withAuth } from \"../lib/AuthProvider\";\n\nfunction PrivateRoute({\n  component: Component,\n  isLoggedin,\n  ...rest\n}) {\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => isLoggedin ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 39\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 66\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 4\n    }\n  }));\n}\n\nexport default withAuth(PrivateRoute);","map":{"version":3,"sources":["/Users/mac/Desktop/web-dev/Projects/Swapit/Client/src/components/PrivateRoute.js"],"names":["React","Route","Redirect","withAuth","PrivateRoute","component","Component","isLoggedin","rest","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,QAAT,QAAyB,qBAAzB;;AAEA,SAASC,YAAT,CAAsB;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,UAAxB;AAAoC,KAAGC;AAAvC,CAAtB,EAAqE;AACnE,sBACC,oBAAC,KAAD,oBACKA,IADL;AAEC,IAAA,MAAM,EAAIC,KAAD,IAAYF,UAAU,gBAAG,oBAAC,SAAD,oBAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH,gBAA8B,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD;AAMD;;AAED,eAAeN,QAAQ,CAACC,YAAD,CAAvB","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { withAuth } from \"../lib/AuthProvider\";\n\nfunction PrivateRoute({ component: Component, isLoggedin, ...rest }) {\n  return (\n   <Route\n    {...rest}\n    render={ (props)  => isLoggedin ? <Component {...props} /> : <Redirect to=\"/\" />}\n   />\n  );\n}\n\nexport default withAuth(PrivateRoute);"]},"metadata":{},"sourceType":"module"}